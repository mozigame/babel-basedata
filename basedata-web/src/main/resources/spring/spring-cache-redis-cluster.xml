<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">

    
	<!-- 类注解扫描 -->
	<context:component-scan base-package="com.babel.basedata" />
	<context:annotation-config />
	
	<!-- Jedis链接池配置，注意：Jedis版本建议升级到最新（当前最新版为2.7.2） --> 
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxTotal" value="${redis.maxTotal}" /> 
		<property name="maxIdle" value="${redis.maxIdle}" /> 
		<property name="minIdle" value="${redis.minIdle}" /> 
		<property name="blockWhenExhausted" value="true"></property> 
		<property name="maxWaitMillis" value="${redis.maxWait}" /> 
		<property name="testOnBorrow" value="${redis.testOnBorrow}" /> 
		<property name="testOnReturn" value="false" /> 
		<property name="testWhileIdle" value="true" /> 
		<property name="minEvictableIdleTimeMillis" value="60000" /> 
		<property name="timeBetweenEvictionRunsMillis" value="30000" /> 
		<property name="numTestsPerEvictionRun" value="-1" /> 
	</bean> 
	<!-- JedisCluster --> 
	<bean id="jedisCluster" class="redis.clients.jedis.JedisCluster"> 
		<constructor-arg index="0"> 
			<set> 
				<bean class="redis.clients.jedis.HostAndPort"> 
					<constructor-arg index="0" value="${redis.cluster.master.host1}" /> 
					<constructor-arg index="1" value="${redis.cluster.master.port1}" type="int" /> 
				</bean> 
				<bean class="redis.clients.jedis.HostAndPort"> 
					<constructor-arg index="0" value="${redis.cluster.master.host2}" /> 
					<constructor-arg index="1" value="${redis.cluster.master.port2}" type="int" /> 
				</bean>  
				<bean class="redis.clients.jedis.HostAndPort"> 
					<constructor-arg index="0" value="${redis.cluster.master.host3}" /> 
					<constructor-arg index="1" value="${redis.cluster.master.port3}" type="int" /> 
				</bean> 
				<bean class="redis.clients.jedis.HostAndPort"> 
					<constructor-arg index="0" value="${redis.cluster.slave.host1}" /> 
					<constructor-arg index="1" value="${redis.cluster.slave.port1}" type="int" /> 
				</bean> 
				<bean class="redis.clients.jedis.HostAndPort"> 
					<constructor-arg index="0" value="${redis.cluster.slave.host2}" /> 
					<constructor-arg index="1" value="${redis.cluster.slave.port2}" type="int" /> 
				</bean>  
				<bean class="redis.clients.jedis.HostAndPort"> 
					<constructor-arg index="0" value="${redis.cluster.slave.host3}" /> 
					<constructor-arg index="1" value="${redis.cluster.slave.port3}" type="int" /> 
				</bean>  
			</set> 
		</constructor-arg> 
		<constructor-arg index="1" value="2000" type="int"></constructor-arg> 
		<constructor-arg index="2" value="100" type="int"></constructor-arg> 
		<constructor-arg index="3" ref="jedisPoolConfig"></constructor-arg> 
	</bean>
	
	<bean id="redisClusterConfiguration"
		class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="maxRedirects" value="3"></property>
		<!-- 节点配置 -->
		<property name="clusterNodes">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.master.host1}"></constructor-arg>
					<constructor-arg name="port" value="${redis.cluster.master.port1}"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.master.host2}"></constructor-arg>
					<constructor-arg name="port" value="${redis.cluster.master.port2}"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.master.host3}"></constructor-arg>
					<constructor-arg name="port" value="${redis.cluster.master.port3}"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.slave.host1}"></constructor-arg>
					<constructor-arg name="port" value="${redis.cluster.slave.port1}"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.slave.host2}"></constructor-arg>
					<constructor-arg name="port" value="${redis.cluster.slave.port2}"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.slave.host3}"></constructor-arg>
					<constructor-arg name="port" value="${redis.cluster.slave.port3}"></constructor-arg>
				</bean>
			</set>
		</property>
	</bean>

	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
           <constructor-arg ref="redisClusterConfiguration" />
           <constructor-arg ref="jedisPoolConfig" />
    </bean>


	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory"/>
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate"/>
	</bean> 
	<cache:annotation-driven cache-manager="redisCacheManager"/>
	
	
	<bean id="oriRedisTemplate" class="com.babel.common.core.redislist.OriRedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="KeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="ValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<!-- <property name="hashValueSerializer"> -->
		<!-- <bean class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer" 
			/> -->
		<!-- </property> -->
	</bean>
	
</beans>